package protege_generated.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import protege_generated.Document;
import protege_generated.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: Document
 *
 * @version generated on Fri Mar 25 01:08:40 MSK 2016
 */
public class DefaultDocument extends AbstractWrappedInstance
         implements Document {

    public DefaultDocument(Instance instance) {
        super(instance);
    }


    public DefaultDocument() {
    }

    // Slot number

    public int getNumber() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getNumberSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getNumberSlot() {
        final String name = "number";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasNumber() {
        return hasSlotValues(getNumberSlot());
    }


    public void setNumber(int newNumber) {
        setSlotValue(getNumberSlot(), new java.lang.Integer(newNumber));
    }

    // Slot seria

    public int getSeria() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getSeriaSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getSeriaSlot() {
        final String name = "seria";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasSeria() {
        return hasSlotValues(getSeriaSlot());
    }


    public void setSeria(int newSeria) {
        setSlotValue(getSeriaSlot(), new java.lang.Integer(newSeria));
    }

    // Slot type

    public String getType() {
        return (String) getWrappedProtegeInstance().getOwnSlotValue(getTypeSlot());
    }


    public Slot getTypeSlot() {
        final String name = "type";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasType() {
        return hasSlotValues(getTypeSlot());
    }


    public void setType(String newType) {
        setSlotValue(getTypeSlot(), newType);
    }

    // Slot valid

    public boolean getValid() {
        java.lang.Boolean value = (java.lang.Boolean) getWrappedProtegeInstance().getOwnSlotValue(getValidSlot());
        return value == null ? null :
            (java.lang.Boolean) value.booleanValue();
    }


    public Slot getValidSlot() {
        final String name = "valid";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasValid() {
        return hasSlotValues(getValidSlot());
    }


    public void setValid(boolean newValid) {
        setSlotValue(getValidSlot(), new java.lang.Boolean(newValid));
    }
}
